<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

	<!-- 강의에서 한것 새롭게 만들어봄, 비밀번호를 찾기 위한 기능 구현 -->
	<bean id="findPwDao" class="com.feb.test.dao.impl.FindPwDaoImpl">
	    <property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="findPwService" class="com.feb.test.service.FindPwService">
	    <constructor-arg ref="findPwDao" />
	    <!-- name="타겟_변수명" ref="타겟 _변수에_해당하는_클래스" (FindPwService안에 있는 변수명)-->
	    <property name="emailUtil" ref="emailUtil" />
	</bean>
	
	
	
	<!-- private JavaMailSender mailSender;
    public EmailUtil(JavaMailSender mailSender) { // xml
    	this.mailSender = mailSender;
    } -->
	<bean id="emailUtil" class="com.feb.test.util.EmailUtil">
		<constructor-arg ref="mailSender" />
	</bean>
	<!-- EmailUtil 클래스를 Spring bean으로 등록하세요 -->
	<!-- EmailUtil emailUtil = new EmailUtil(); 이것이랑 같다 -->
	<!-- bean id="emailUtil" class="com.feb.test.util.EmailUtil"/ -->
	
	
	
	<!-- 이메일 전송하기 위한 bean설정 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.naver.com" />
		<property name="port" value="587" />
		<property name="username" value="sinbumjun123@naver.com" />
		<property name="password" value="151243739009q!" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
	
	


	<!--  bean id="loginController" class="com.feb.test.controller.LoginController">
		<constructor-arg ref="loginService" />
	</bean-->
	
	<!-- 로그인을 위한 서비스 및 DAO 빈 설정 -->
	<!--  bean id="loginService" class="com.feb.test.service.LoginService">
		<constructor-arg ref="loginDao" />loginService 빈이 생성될 때 loginDao 빈이 필요
	</bean -->
	
	<bean id="loginDao" class="com.feb.test.dao.impl.LoginDaoImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 회원가입을 위한 서비스 및 DAO 빈 설정  -->
	<bean id="UserService" class="com.feb.test.service.UserService">
		<constructor-arg ref="UserDao" />
	</bean>
	
	<bean id="UserDao" class="com.feb.test.dao.impl.UserDaoImpl">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	
	<!-- applicationContext-beans.xml -->
	<!-- CommonsMultipartResolver를 사용하여 파일 업로드를 처리하기 위한 빈 설정 -->
	<bean id="fileUploadService" class="com.feb.test.service.FileUploadService">
	    <constructor-arg ref="fileUploadDao" />
	</bean>
	
	<bean id="fileUploadDao" class="com.feb.test.dao.impl.FileUploadDaoImpl">
	    <property name="dataSource" ref="dataSource" />
	</bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="20971520"/> <!-- 20MB -->
    </bean>

	
	
</beans>